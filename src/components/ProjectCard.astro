---
import { Picture } from 'astro:assets';

interface Props {
	title: string;
	description: string;
	image: string;
	slug: string;
	width: number;
	height: number;
}

const { title, description, image, slug, width, height } = Astro.props;
---

<div class="project-card overflow-hidden rounded-lg bg-container opacity-0 shadow-lg">
	<div class="card-content relative z-10">
		<Picture
			src={image}
			alt={title}
			width={width}
			height={height}
			class="h-48 w-full object-cover"
		/>
		<div class="p-6">
			<h3 class="mb-2 text-xl font-semibold text-accent">{title}</h3>
			<p class="mb-4 text-text">{description}</p>
			<a
				href={`/projects/${slug}`}
				class="inline-block rounded-full bg-accent px-4 py-2 font-bold text-bg hover:bg-secondary"
				aria-label={`Learn more about ${title}`}>
				Learn More
				<span class="sr-only"> about {title}</span>
			</a>
		</div>
	</div>
</div>

<script>
	import { animate, inView } from 'motion';

	function createCardAnimation(card: Element): void {
		const image = card.querySelector('img');
		const title = card.querySelector('h3');
		const description = card.querySelector('p');
		const button = card.querySelector('a');

		inView(card, () => {
			animate(card, { rotateY: [-90, 0], opacity: [0, 1] }, { duration: 1, easing: 'ease-out' });
			if (image) {
				animate(
					image,
					{ scale: [1.5, 1], opacity: [0, 1] },
					{ duration: 0.3, delay: 0.2, easing: 'ease-out' }
				);
			}
			if (title && description) {
				animate(
					title,
					{ y: [50, 0], opacity: [0, 1] },
					{ duration: 0.3, delay: 0.3, easing: 'ease-out' }
				);
				animate(
					description,
					{ y: [50, 0], opacity: [0, 1] },
					{ duration: 0.3, delay: 0.5, easing: 'ease-out' }
				);
			}
			if (button) {
				animate(
					button,
					{ scale: [0, 1], opacity: [0, 1] },
					{ duration: 0.3, delay: 0.8, easing: 'ease-out' }
				);
			}
		});
	}

	function setupHoverAnimation(card: Element): void {
		const overlay = card.querySelector('.card-overlay');
		card.addEventListener('mouseenter', () => {
			animate(card, { scale: [1, 1.05] }, { duration: 0.3 });
			if (overlay) {
				animate(overlay, { opacity: [0.1, 0.2] }, { duration: 0.3 });
			}
		});
		card.addEventListener('mouseleave', () => {
			animate(card, { scale: [1.05, 1] }, { duration: 0.3 });
			if (overlay) {
				animate(overlay, { opacity: [0.2, 0.1] }, { duration: 0.3 });
			}
		});
	}

	document.addEventListener('DOMContentLoaded', (): void => {
		const projectCards = document.querySelectorAll('.project-card');
		projectCards.forEach((card: Element) => {
			createCardAnimation(card);
			setupHoverAnimation(card);
		});
	});
</script>
